package:
  patterns:
    - '!*.spec.js'
    - '!*.yml'
    - '!serverless.yml'
  individually: true
params:
  default:
    AWS_ACCOUNT_ID: ${env:AWS_ACCOUNT_ID, "339551586900"}
    API_KEY: ${env:API_KEY, "d41d8cd98f00b204e9800998ecf8427e"}
    DB_URI: ${env:DB_URI, "mongodb://localhost:27017/neuestart"}
    EVENT_BUS_ARN: ${env:EVENT_BUS_ARN, "arn:aws:events:us-east-1:339551586900:event-bus/default"}
    GIT_SHA: ${env:GIT_SHA, "000"}
    GIT_BRANCH: ${env:GIT_BRANCH, "local-dev"}
    DEPLOY_TIME: ${env:DEPLOY_TIME, "now"}
    DATADOG_API_KEY: ${env:DATADOG_API_KEY, 'xxx'}
    DD_PROFILING_ENABLED: ${env:DD_PROFILING_ENABLED, false}
    LOG_LEVEL: ${env:LOG_LEVEL, 'debug'}
    SERVICE: ${self:service}

provider:
  name: aws
  runtime: nodejs16.x
  endpointType: regional
  region: ${env:AWS_REGION, 'us-west-2'}
  memorySize: 512 # Overwrite the default memory size. Default is 1024..
  versionFunctions: false # Stops saving a complete version of each function each time its deployed
  iam:
    role: arn:aws:iam::${param:AWS_ACCOUNT_ID}:role/lambda-with-s3
  deploymentBucket:
    name: neue-parti-neuestart-${sls:stage} # Deployment bucket name. Default is generated by the framework
    maxPreviousDeploymentArtifacts: 2 # On every deployment the framework prunes the bucket to remove artifacts older than this limit. The default is 5
    blockPublicAccess: true
  apiGateway:
    apiKeySourceType: HEADER
    disableDefaultEndpoint: true
    restApiId: djjet7c19c
    restApiRootResourceId: 8pvtdr6jf8
  logRetentionInDays: 14
  vpc:
    securityGroupIds:
      - sg-003944df4a4cf5dc1
    subnetIds:
      - subnet-09deec82cfc928258
      - subnet-0da51d1d204b5f166
      - subnet-03c495daa2f53e935
  tags:
    version: ${param:GIT_SHA}
    branch: ${param:GIT_BRANCH}
    deploy_time: ${param:DEPLOY_TIME}
    stage: ${sls:stage}
    service: neue-parti-neuestart-${sls:stage}-${self:service}
    'git.commit.sha': ${param:GIT_SHA}
    'git.repository_url': git@github.com:Neue-Parti/neuestart.git

plugins:
  - serverless-bundle
  - serverless-add-api-key

custom:
  apiKeys:
    - name: neuestart-api-key
      value: ${param:API_KEY}
  bundle:
    status: true
    linting: false
    minifyOptions:
      keepNames: true
    sourceMaps: true
    caching: true
    excludeFiles: ['**/*.spec.js', '**/mock*.js']
    disableForkTsChecker: true
    esbuild: true
    externals:
      - mongoose
      - graphql-compose-mongoose
      - graphql-compose
      - graphql
  offline:
    allowCache: true # Important: This will prevent serverless-offline from eating all of your memory
  datadog:
    addLayers: true
    env: ${sls:stage}
    service: ${self:service}
    version: 1.0.0
    site: datadoghq.com
    captureLambdaPayload: true
