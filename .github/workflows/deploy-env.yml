name: Deploy To Env
on:
  workflow_call:
    inputs:
      deploy_env:
        description: 'Which environment to deploy to'
        required: true
        default: 'alpha'
        type: string
      aws_account_id:
        description: 'AWS Account ID'
        required: true
        type: string
      domain_name:
        description: 'Domain name'
        required: true
        type: string
      event_bus_name:
        description: 'Event bus name'
        required: true
        type: string
      new_resources:
        type: boolean
        description: 'Should Pulumi create new resources?'
        default: false
        required: true
      secrets_manager_key:
        description: 'Secrets Manager key'
        required: true
        type: string
      aws_region:
        description: 'AWS Region'
        required: true
        type: string
      deployment_role_arn:
        description: 'Deployment role ARN'
        required: true
        type: string

jobs:
  cancel:
    name: 'Cancel Previous Runs'
    runs-on: ubuntu-20.04
    steps:
      - uses: styfle/cancel-workflow-action@0.10.1
        with:
          access_token: ${{ github.token }}

  getservices:
    name: Get Services
    runs-on: ubuntu-20.04
    outputs:
      matrix: ${{ steps.getservices.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3.1.0
        with:
          fetch-depth: '0'
      - name: Get Services
        id: getservices
        run: echo "::set-output name=matrix::$(ls services| awk ' BEGIN { ORS = ""; print "["; } { print "\/\@"$0"\/\@"; } END { print "]"; }' | sed "s^\"^\\\\\"^g;s^\/\@\/\@^\", \"^g;s^\/\@^\"^g")"

  deploy:
    runs-on: ubuntu-20.04
    needs: getservices
    env: # Or as an environment variable
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      SLS_WARNING_DISABLE: '*'
    continue-on-error: false
    outputs:
      result: ${{ steps.deploy.outputs.result }}
    strategy:
      fail-fast: false
      matrix:
        package: ${{fromJSON(needs.getservices.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v3.1.0
        with:
          fetch-depth: '0'

      - uses: ferluisxd/create-npmrc@3
        with:
          org_name: denimsocial
          auth_token: ${{ inputs.package_install_token }}

      - uses: actions/setup-node@v3
        with:
          node-version: 14
          always-auth: true
          registry-url: https://npm.pkg.github.com
          cache: 'yarn'
      - name: Install Deps
        run: yarn --registry https://registry.npmjs.org install
        env:
          NODE_AUTH_TOKEN: ${{ env.PACKAGE_INSTALL_TOKEN }}

      - shell: bash
        name: Denim Serverless CI Deploy - ${{ matrix.package }}
        env:
          SERVICE: ${{ matrix.package }}
          ENV: ${{ inputs.deploy_env }}
          AWS_ACCOUNT_ID: ${{ inputs.aws_account_id }}
          DOMAIN_NAME: ${{ inputs.domain_name }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ inputs.aws_region }}
          AWS_SECRETS_MANAGER_KEY: ${{ inputs.secrets_manager_key }}
          EVENT_BUS_NAME: ${{ inputs.EVENT_BUS_NAME }}
          DEPLOYMENT_IAM_ROLE_ARN: ${{ inputs.deployment_role_arn }}
        working-directory: ./cicd
        run: |
          node deploy.js
